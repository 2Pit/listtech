syntax = "proto3";

package searcher;

import "google/api/annotations.proto";
import "common.proto";

option go_package = "listtech/searcher;searcher";

// gRPC сервис с HTTP аннотациями для swagger
service SearchService {
  rpc Search (SearchRequest) returns (SearchResponse) {
    option (google.api.http) = {
      post: "/v1/search"
      body: "*"
    };
  }

  rpc SearchMatrix (SearchRequest) returns (SearchMatrixResponse) {
    option (google.api.http) = {
      post: "/v1/search_matrix"
      body: "*"
    };
  }
}

message SearchRequest {
  string query = 1;
  repeated string return_fields = 2;
}

message SearchResponse {
  repeated SearchHit hits = 1;
}

message SearchHit {
  repeated SearchField fields = 1;
}

message SearchField {
  string name = 1;

  oneof value {
    bool bool_value = 2;
    uint64 ulong_value = 3;
    int64 long_value = 4;
    double double_value = 5;
    string string_value = 6;
    bytes bytes_value = 7;
    int64 timestamp_ms_value = 8;
    FacetWrapper facet_wrapper = 9;
  }

  message FacetWrapper {
    repeated string facets = 1;
  }
}

message SearchMatrixResponse {
  uint32 row_count = 1;
  repeated ColumnVector columns = 2;
}

message ColumnVector {
  string name = 1;

  oneof values {
    BoolColumn bools = 2;
    UInt64Column ulongs = 3;
    Int64Column longs = 4;
    DoubleColumn doubles = 5;
    StringColumn strings = 6;
    BytesColumn bytes = 7;
    TimestampColumn timestamps = 8;
    FacetColumn facets = 9;
  }
}

message BoolColumn {
  repeated common.OptionalBool values = 1;
}

message Int64Column {
  repeated common.OptionalInt64 values = 1;
}

message UInt64Column {
  repeated common.OptionalUInt64 values = 1;
}

message DoubleColumn {
  repeated common.OptionalDouble values = 1;
}

message StringColumn {
  repeated common.OptionalString values = 1;
}

message BytesColumn {
  repeated common.OptionalBytes values = 1;
}

message TimestampColumn {
  repeated common.OptionalTimestampMs values = 1;
}

message FacetColumn {
  repeated common.OptionalString values = 1;
}
